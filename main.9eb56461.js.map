{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tBody","sortOrder","sortHeader","sortTable","colNum","target","order","tbody","compare","rowsArray","Array","from","rows","textContent","rowA","rowB","cells","innerHTML","localeCompare","getSalary","sort","append","row","Number","slice","split","join","toggleSelect","tr","classList","toggle","singleSelect","selected","querySelectorAll","remove","add","removeSelect","addEventListener","e","tagName","th","cellIndex","closest","contains","ctrlKey","metaKey","insertAdjacentHTML","editingTd","form","forms","lastElem","elements","length","firstElem","saveDataToTable","data","createElement","name","position","office","age","salary","toLocaleString","formValidation","pushNotification","title","description","type","body","setTimeout","makeTdEditable","td","index","input","elem","placeholder","value","className","style","width","clientWidth","appendChild","focus","onkeydown","key","blur","onblur","finishTdEdit","innerText","shiftKey","preventDefault","Object","fromEntries","FormData","entries","reset"],"mappings":"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","file":"main.9eb56461.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tBody = table.querySelector('tbody');\nlet sortOrder = '';\nlet sortHeader = null;\n\n// Implementation of table sorting by clicking on the title (in two directions):\ntable.addEventListener('click', e => {\n  if (e.target.tagName !== 'TH') {\n    return;\n  }\n\n  const th = e.target;\n\n  if (sortHeader !== th) {\n    sortOrder = 'ASC';\n    sortHeader = th;\n  } else {\n    sortOrder = 'DESC';\n    sortHeader = null;\n  }\n\n  sortTable(th.cellIndex, th, sortOrder);\n});\n\nfunction sortTable(colNum, target, order) {\n  const tbody = table.querySelector('tbody');\n  const rowsArray = Array.from(tbody.rows);\n  let compare;\n\n  if (order === 'ASC') {\n    switch (target.textContent) {\n      case 'Name':\n      case 'Position':\n      case 'Office':\n        compare = function(rowA, rowB) {\n          return rowA.cells[colNum].innerHTML\n            .localeCompare(rowB.cells[colNum].innerHTML);\n        };\n        break;\n\n      case 'Age':\n        compare = function(rowA, rowB) {\n          return rowA.cells[colNum].innerHTML - rowB.cells[colNum].innerHTML;\n        };\n        break;\n\n      case 'Salary':\n        compare = function(rowA, rowB) {\n          return getSalary(rowA.cells[colNum].innerHTML)\n            - getSalary(rowB.cells[colNum].innerHTML);\n        };\n        break;\n    }\n  }\n\n  if (order === 'DESC') {\n    switch (target.textContent) {\n      case 'Name':\n      case 'Position':\n      case 'Office':\n        compare = function(rowA, rowB) {\n          return rowB.cells[colNum].innerHTML\n            .localeCompare(rowA.cells[colNum].innerHTML);\n        };\n        break;\n\n      case 'Age':\n        compare = function(rowA, rowB) {\n          return rowB.cells[colNum].innerHTML - rowA.cells[colNum].innerHTML;\n        };\n        break;\n\n      case 'Salary':\n        compare = function(rowA, rowB) {\n          return getSalary(rowB.cells[colNum].innerHTML)\n            - getSalary(rowA.cells[colNum].innerHTML);\n        };\n        break;\n    }\n  }\n\n  rowsArray.sort(compare);\n  tbody.append(...rowsArray);\n}\n\nfunction getSalary(row) {\n  return Number(row.slice(1).split(',').join(''));\n}\n\n// Implementation of row selecting by clicking on the row:\ntBody.addEventListener('click', e => {\n  const target = e.target.closest('tr');\n\n  if (!target || !tBody.contains(target)) {\n    return;\n  }\n\n  if (e.ctrlKey || e.metaKey) {\n    toggleSelect(target);\n  } else {\n    singleSelect(target);\n  }\n});\n\nfunction toggleSelect(tr) {\n  tr.classList.toggle('active');\n}\n\nfunction singleSelect(tr) {\n  const selected = tBody.querySelectorAll('.active');\n\n  for (const elem of selected) {\n    elem.classList.remove('active');\n  }\n\n  tr.classList.add('active');\n}\n\nfunction removeSelect() {\n  const selected = tBody.querySelectorAll('.active');\n\n  for (const elem of selected) {\n    elem.classList.remove('active');\n  }\n}\n\n// Implementation of form:\ntable.insertAdjacentHTML('afterend', `\n  <form action=\"./\" class=\"new-employee-form\" name=\"employee-form\">\n    <label>Name:\n      <input name=\"name\" type=\"text\" data-qa=\"name\" required>\n    </label>\n    <label>Position:\n      <input name=\"position\" type=\"text\" data-qa=\"position\" required>\n    </label>\n    <label>Office:\n      <select name=\"office\" data-qa=\"office\" required>\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n    <label>Age:\n      <input name=\"age\" type=\"number\" data-qa=\"age\" required>\n    </label>\n    <label>Salary:\n      <input name=\"salary\" type=\"number\" data-qa=\"salary\" required>\n    </label>\n    <button type='submit'>Save to table</button>\n  </form>\n`);\n\nconst form = document.forms['employee-form'];\n\nconst lastElem = form.elements[form.elements.length - 1];\nconst firstElem = form.elements[0];\n\nlastElem.onkeydown = function(e) {\n  if (e.key === 'Tab' && !e.shiftKey) {\n    firstElem.focus();\n\n    return false;\n  }\n};\n\nfirstElem.onkeydown = function(e) {\n  if (e.key === 'Tab' && e.shiftKey) {\n    lastElem.focus();\n\n    return false;\n  }\n};\n\nlastElem.addEventListener('click', e => {\n  e.preventDefault();\n\n  const data = Object.fromEntries(new FormData(form).entries());\n\n  if (!formValidation(data)) {\n    return;\n  }\n\n  saveDataToTable(data);\n  removeSelect();\n  form.reset();\n});\n\nfunction saveDataToTable(data) {\n  const tr = document.createElement('tr');\n\n  tr.innerHTML = `\n    <td>${data.name}</td>\n    <td>${data.position}</td>\n    <td>${data.office}</td>\n    <td>${data.age}</td>\n    <td>$${Number(data.salary).toLocaleString('en-US')}</td>\n  `;\n\n  tBody.append(tr);\n}\n\n// Implementation of form validation and notification:\nfunction formValidation(data) {\n  if (data.name.length < 4) {\n    pushNotification(\n      'Error',\n      'Name must contain more then 3 character',\n      'error'\n    );\n\n    return false;\n  }\n\n  if (data.age < 18 || data.age > 90) {\n    pushNotification(\n      'Error',\n      'Age must be between 18 and 90',\n      'error'\n    );\n\n    return false;\n  }\n\n  if (data.position === '' || data.salary === '') {\n    pushNotification(\n      'Error',\n      'Fill in all fields of the form',\n      'error'\n    );\n\n    return false;\n  }\n\n  pushNotification('Success',\n    'New employee successfully added',\n    'success'\n  );\n\n  return true;\n}\n\nfunction pushNotification(title, description, type) {\n  document.body.insertAdjacentHTML('beforeend', `\n    <div class=\"notification ${type}\" data-qa=\"notification\">\n      <h2 class=\"title\">${title}</h2>\n      <p>${description}</p>\n  </div>\n`);\n\n  setTimeout(() => {\n    document.body.querySelector('.notification').remove();\n  }, 2000);\n};\n\n// Implementation of table cells editing by double-clicking on it:\nlet editingTd;\n\ntBody.addEventListener('dblclick', e => {\n  e.preventDefault();\n\n  if (e.target.tagName !== 'TD') {\n    return;\n  }\n\n  const td = e.target;\n  const index = td.cellIndex;\n\n  makeTdEditable(td, index);\n});\n\nfunction makeTdEditable(td, index) {\n  editingTd = {\n    elem: td,\n    data: td.innerHTML,\n  };\n\n  let input;\n\n  switch (index) {\n    case 0:\n      input = document.createElement('input');\n      input.type = 'text';\n      input.placeholder = 'at least 4 character';\n      input.value = td.innerHTML;\n      break;\n\n    case 1:\n      input = document.createElement('input');\n      input.type = 'text';\n      input.value = td.innerHTML;\n      break;\n\n    case 2:\n      input = document.createElement('select');\n\n      input.innerHTML = `\n          <option value=\"Tokyo\">Tokyo</option>\n          <option value=\"Singapore\">Singapore</option>\n          <option value=\"London\">London</option>\n          <option value=\"New York\">New York</option>\n          <option value=\"Edinburgh\">Edinburgh</option>\n          <option value=\"San Francisco\">San Francisco</option>\n      `;\n      input.value = td.innerHTML;\n      break;\n\n    case 3:\n      input = document.createElement('input');\n      input.type = 'number';\n      input.placeholder = 'age 18 - 90';\n      input.value = td.innerHTML;\n      break;\n\n    case 4:\n      input = document.createElement('input');\n      input.type = 'number';\n      input.placeholder = 'just a number';\n      input.value = Number(td.innerHTML.slice(1).split(',').join(''));\n      break;\n  }\n\n  input.className = 'cell-input';\n  input.style.width = td.clientWidth + 'px';\n  td.innerHTML = '';\n  td.appendChild(input);\n  input.focus();\n\n  input.onkeydown = function(e) {\n    if (e.key === 'Enter') {\n      this.blur();\n    }\n  };\n\n  input.onblur = function() {\n    finishTdEdit(td, input, index);\n  };\n}\n\nfunction finishTdEdit(td, input, index) {\n  if (input.value !== '') {\n    switch (index) {\n      case 0:\n        if (input.value.length < 4) {\n          td.innerText = editingTd.data;\n\n          pushNotification(\n            'Error',\n            'Name must contain more then 3 character',\n            'error'\n          );\n          break;\n        }\n\n        td.innerText = input.value;\n        break;\n\n      case 3:\n        if (input.value < 18 || input.value > 90) {\n          td.innerText = editingTd.data;\n\n          pushNotification(\n            'Error',\n            'Age must be between 18 and 90',\n            'error'\n          );\n          break;\n        }\n\n        td.innerText = input.value;\n        break;\n\n      case 4:\n        td.innerText = `$${Number(input.value).toLocaleString('en-US')}`;\n        break;\n\n      default:\n        td.innerText = input.value;\n    }\n  } else {\n    td.innerText = editingTd.data;\n  }\n  input.remove();\n  editingTd = null;\n}\n"]}